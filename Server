import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class Server {
    private List<Card> deck;
    private int client1Score;
    private int client2Score;
    private int client3Score;

    public Server() {
        deck = new ArrayList<>();
        client1Score = 0;
        client2Score = 0;
        client3Score = 0;

        // create the deck of cards
        for (int i = 1; i <= 13; i++) {
            deck.add(new Card(i, "Hearts"));
            deck.add(new Card(i, "Diamonds"));
            deck.add(new Card(i, "Clubs"));
            deck.add(new Card(i, "Spades"));
        }

        // shuffle the deck
        Collections.shuffle(deck);
    }

    public void playRound() {
        // pick a card from the deck
        Card serverCard = deck.remove(0);

        // receive cards from clients
        Card client1Card = receiveCardFromClient(1);
        Card client2Card = receiveCardFromClient(2);
        Card client3Card = receiveCardFromClient(3);

        // determine the winner of the round
        int winner = determineRoundWinner(client1Card, client2Card, client3Card);

        // update scores
        if (winner == 1) {
            client1Score += serverCard.getValue();
        } else if (winner == 2) {
            client2Score += serverCard.getValue();
        } else {
            client3Score += serverCard.getValue();
        }

        // print the scorecard
        printScorecard();
    }

    private Card receiveCardFromClient(int clientId) {
        // simulate receiving a card from the client
        // for simplicity, we'll just return a random card from the deck
        Card card = deck.remove(0);
        System.out.println("Client " + clientId + " sent " + card.toString());
        return card;
    }

    private int determineRoundWinner(Card card1, Card card2, Card card3) {
        if (card1.getValue() >= card2.getValue() && card1.getValue() >= card3.getValue()) {
            return 1;
        } else if (card2.getValue() >= card1.getValue() && card2.getValue() >= card3.getValue()) {
            return 2;
        } else {
            return 3;
        }
    }

    private void printScorecard() {
        System.out.println("Round " + (client1Score + client2Score + client3Score + 1) + ":");
        System.out.println("Client 1 score: " + client1Score);
        System.out.println("Client 2 score: " + client2Score);
        System.out.println("Client 3 score: " + client3Score);
        System.out.println();
    }
}
