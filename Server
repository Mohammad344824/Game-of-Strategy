import java.util.*;

public class Server {

    private static final int NUM_ROUNDS = 8;
    private static final int NUM_CLIENTS = 3;

    private static final Map<String, Integer> CARD_VALUES = new HashMap<String, Integer>() {{
        put("Ace", 1);
        put("2", 2);
        put("3", 3);
        put("4", 4);
        put("5", 5);
        put("6", 6);
        put("7", 7);
        put("8", 8);
        put("9", 9);
        put("10", 10);
        put("Jack", 11);
        put("Queen", 12);
        put("King", 13);
    }};

    public static void main(String[] args) {
        List<String> suits = Arrays.asList("Spades", "Hearts", "Diamonds", "Clubs");
        List<String> ranks = new ArrayList<>(CARD_VALUES.keySet());

        // Create the deck of cards
        List<String> deck = new ArrayList<>();
        for (String suit : suits) {
            for (String rank : ranks) {
                deck.add(rank + " (" + CARD_VALUES.get(rank) + "), " + suit);
            }
        }

        // Shuffle the deck
        Collections.shuffle(deck);

        // Initialize the scores for each client
        int[] scores = new int[NUM_CLIENTS];

        // Play the specified number of rounds
        for (int round = 1; round <= NUM_ROUNDS; round++) {
            // Pick the top card from the deck
            String card = deck.remove(0);
            System.out.println("Round " + round + ": Server picks " + card);

            // Receive a card from each client
            List<String> cards = new ArrayList<>();
            Scanner scanner = new Scanner(System.in);
            for (int i = 0; i < NUM_CLIENTS; i++) {
                System.out.print("Client " + (i + 1) + ", please enter your card (format: 'rank (value), suit'): ");
                String input = scanner.nextLine();
                cards.add(input);
            }

            // Determine the winner of the round
            int highestValue = -1;
            int winnerIndex = -1;
            for (int i = 0; i < NUM_CLIENTS; i++) {
                String[] parts = cards.get(i).split(", ");
                String[] cardParts = parts[0].split(" \\(");
                String rank = cardParts[0];
                int value = Integer.parseInt(cardParts[1].substring(0, cardParts[1].length() - 1));
                if (value > highestValue) {
                    highestValue = value;
                    winnerIndex = i;
                }
            }

            // Increment the score for the winner
            scores[winnerIndex] += CARD_VALUES.get(rank);

            // Print the updated scorecard
            System.out.println("Scorecard table after Round " + round + ":");
            System.out.println("Round  Client 1 score  Client 2 score  Client 3 score");
            for (int i = 0; i < NUM_ROUNDS; i++) {
                System.out.printf("%-6d %-15d %-15d %-15d%n", i + 1, scores[0], scores[1], scores[2]);
            }
            System.out.println();
        }
    }

}
